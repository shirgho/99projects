
* P02 - Regex query tool
** Project
Regex Query Tool - A tool that allows the user to enter a text string and then 
in a separate control enter a regex pattern. It will run the regular expression 
against the source text and return any matches or flag errors in the regular expression.
** Strategy
For this, I want to make a small web interface.
+ one text area for the input (OPTIONAL : upload file)
+ one text area for the regex pattern
+ result displayed using CSS for text-coloring
** Features
*** DONE handle regex errors
** What I learned
+ handling exceptions
* P03 - Page scraper
** Project
Page Scraper - Create an application which connects to
a site and pulls out all links, or images, and saves them to a list. 
Optional: Organize the indexed content and donâ€™t allow duplicates. 
Have it put the results into an easily searchable index file.
** Analysis
If I want to make it from scratch, I'll need a lot of regex. 
There are also tools like [Scrapy](http://scrapy.org/) that
I can use. My choice then ... 
Even though Scrapy looks interesting, I want to do it myself
** Steps
*** DONE Connect to a website
*** TODO Generate a map of the website (Optional, I'm parsing 9gag.com/trending for now)
*** DONE For each webpage, retrieve the source code
*** DONE Parse the source code to extract all the links/images
*** DONE Associate each image with the caption it comes with
*** DONE Generate an index file to store the data (JSON or XML ?)
** Notes
I didn't know what to do. At first, I wanted to make a map of all
the links in a website. It's doable of course, but very time-expensive.
So I focused on one page of a website in particular. I studied its 
source code and created the regex rules accordingly.
** What I learned
File opening and writing
